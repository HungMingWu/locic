// Program entry point.

void print(const char* text);

void sleep(int seconds);

double sin(double angle);
double cos(double angle);

// Entry point.
int main() {
	auto renderWindow = sf::RenderWindow(sf::VideoMode(800u, 800u, 32u), C"Chain Reversi");
	auto circleShape = sf::CircleShape();
	circleShape.setRadius(100.0f);
	circleShape.setOrigin(sf::Vector2f(100.0f, 100.0f));
	circleShape.setFillColor(sf::Color(255u, 0u, 0u, 255u));
	
	renderWindow.setFramerateLimit(25);
	
	uint8_t i = 0u;
	
	double orbitRadius = 200.0;
	double angle = 0.0;
	
	while (renderWindow.isOpen()) {
		auto event = sfEvent(0, 0u);
		
		while (renderWindow.pollEvent(&event)) {
			if (event.type == 0) {
				printf(C"Close requested...\n");
				return 0;
			}
		}
		
		renderWindow.clear(sf::Color(i, i, i, 255u));
		
		angle = angle + 0.01;
		
		double xPos = cos(angle) * orbitRadius;
		double yPos = sin(angle) * orbitRadius;
		
		circleShape.setPosition(sf::Vector2f(400.0f + xPos.toFloat(), 400.0f + yPos.toFloat()));
		
		renderWindow.drawCircle(circleShape);
		
		renderWindow.display();
		
		if (i == 255u) {
			i = 0u;
		} else {
			i = i + 1u;
		}
	}
	
	printf(C"Terminating...\n");
	
	sleep(1);
	
	return 0;
}

