template <virtual typename T>
__primitive ptr{
	static unit();
	
	static null();
	
	lval ptr_lval<T> deref();
	lval const ptr_lval<T> deref() const;
	
	ptr<T> add(ssize_t offset) const;
	
	ssize_t subtract(ptr<T> ptr) const;
	
	lval ptr_lval<T> atIndex(size_t index);
	lval const ptr_lval<T> atIndex(size_t index) const;
}

template <virtual typename T>
__primitive ptr_lval {
	T lvalMove();
	
	void lvalSet(T value);
	
	T& lvalGet() const;
	
	T* lvalAddress();
	T* const lvalAddress() const;
}


