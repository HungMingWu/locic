template <typename T>
interface __implicit_cast_from_ushort_t {
	static T implicit_cast_ushort_t(ushort_t value) noexcept;
}

template <typename T>
interface __cast_from_ushort_t {
	static T cast_ushort_t(ushort_t value) noexcept;
}

__primitive ushort_t {
	static ushort_t implicit_cast_uint8_t(uint8_t value) noexcept;
	static ushort_t implicit_cast_uint16_t(uint16_t value) noexcept;
	static ushort_t implicit_cast_ubyte_t(ubyte_t value) noexcept;
	
	ushort_t implicitCopy() const noexcept;
	
	template <typename T: __implicit_cast_from_ushort_t<T>>
	T implicitCast() const noexcept;
	
	template <typename T: __cast_from_ushort_t<T>>
	T cast() const noexcept;
	
	ushort_t add(const ushort_t& v) const noexcept;
	ushort_t subtract(const ushort_t& v) const noexcept;
	ushort_t multiply(const ushort_t& v) const noexcept;
	ushort_t divide(const ushort_t& v) const noexcept;
	ushort_t modulo(const ushort_t& v) const noexcept;
	
	bool equal(const ushort_t& v) const noexcept;
	bool not_equal(const ushort_t& v) const noexcept;
	bool less_than(const ushort_t& v) const noexcept;
	bool less_than_or_equal(const ushort_t& v) const noexcept;
	bool greater_than(const ushort_t& v) const noexcept;
	bool greater_than_or_equal(const ushort_t& v) const noexcept;
	
	compare_result_t compare(const ushort_t& v) const noexcept;
	
	bool isZero() const noexcept;
}
