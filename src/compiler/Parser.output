Terminals unused in grammar

   PTRACCESS
   NOTEQUAL
   GREATEROREQUAL
   LESSOREQUAL
   WHILE
   FOR


Grammar

    0 $accept: start $end

    1 start: AllowEndOfLine File AllowEndOfLine

    2 File: TypeDeclaration
    3     | File EndOfLine TypeDeclaration

    4 $@1: /* empty */

    5 TypeDeclaration: TYPENAME '(' ')' '{' $@1 AllowEndOfLine Class AllowEndOfLine '}'

    6 $@2: /* empty */

    7 TypeDeclaration: EXTERNAL TYPENAME $@2 '{' AllowEndOfLine ExternalClass AllowEndOfLine '}'

    8 $@3: /* empty */

    9 TypeDeclaration: TYPENAME '{' $@3 AllowEndOfLine Interface AllowEndOfLine '}'

   10 TypeList: Type
   11         | TypeList ',' Type

   12 ExpressionList: Expression
   13               | ExpressionList ',' Expression

   14 MethodCallParameters: /* empty */
   15                     | ExpressionList

   16 Type: TYPENAME

   17 ParamTypes: /* empty */
   18           | TypeList

   19 Class: ClassMethod
   20      | Class EndOfLine ClassMethod

   21 ExternalClass: ExternalMethod
   22              | ExternalClass EndOfLine ExternalMethod

   23 Interface: InterfaceMethod
   24          | Interface EndOfLine InterfaceMethod

   25 MethodName: VARNAME
   26           | '+'
   27           | '-'
   28           | '*'
   29           | '/'
   30           | ISEQUAL

   31 MethodExpr: Scope
   32           | '=' Expression

   33 ClassMethod: TYPENAME '(' ParamSpec ')' MethodExpr
   34            | MethodName '(' ParamSpec ')' MethodExpr

   35 ExternalMethod: TYPENAME '(' ParamTypes ')'
   36               | Type MethodName '(' ParamTypes ')'

   37 InterfaceMethod: Type MethodName '(' ParamTypes ')'

   38 ParamSpec: ParamSpecList
   39          | /* empty */

   40 ParamSpecList: Type VARNAME
   41              | ParamSpecList ',' Type VARNAME

   42 EndOfLine: ';'
   43          | EndOfLine ';'

   44 AllowEndOfLine: /* empty */
   45               | EndOfLine

   46 Scope: '{' AllowEndOfLine ScopeExpressions AllowEndOfLine '}'

   47 ScopeExpressions: Expression
   48                 | ScopeExpressions EndOfLine Expression

   49 Precision7: '(' Precision0 ')'
   50           | Scope
   51           | VARNAME
   52           | INT
   53           | BOOL
   54           | FLOAT
   55           | STRING
   56           | Type ':' TYPENAME '(' MethodCallParameters ')'
   57           | Type '(' MethodCallParameters ')'

   58 Precision6: Precision7

   59 Precision5: Precision6
   60           | '+' Precision5
   61           | '-' Precision5
   62           | '!' Precision5

   63 Precision4: Precision5
   64           | Precision4 '*' Precision5
   65           | Precision4 '/' Precision5

   66 Precision3: Precision4
   67           | Precision3 '+' Precision4
   68           | Precision3 '-' Precision4

   69 Precision2: Precision3
   70           | Precision3 ISEQUAL Precision3

   71 Precision1: Precision2
   72           | IF '(' Expression ')' Expression ELSE Expression

   73 Precision0: Precision1
   74           | VARNAME '=' Expression

   75 Expression: Precision0


Terminals, with rules where they appear

$end (0) 0
'!' (33) 62
'(' (40) 5 33 34 35 36 37 49 56 57 72
')' (41) 5 33 34 35 36 37 49 56 57 72
'*' (42) 28 64
'+' (43) 26 60 67
',' (44) 11 13 41
'-' (45) 27 61 68
'/' (47) 29 65
':' (58) 56
';' (59) 42 43
'=' (61) 32 74
'{' (123) 5 7 9 46
'}' (125) 5 7 9 46
error (256)
FLOAT (258) 54
INT (259) 52
BOOL (260) 53
STRING (261) 55
TYPENAME (262) 5 7 9 16 33 35 56
VARNAME (263) 25 40 41 51 74
PTRACCESS (264)
ISEQUAL (265) 30 70
NOTEQUAL (266)
GREATEROREQUAL (267)
LESSOREQUAL (268)
IF (269) 72
ELSE (270) 72
WHILE (271)
FOR (272)
EXTERNAL (273) 7


Nonterminals, with rules where they appear

$accept (32)
    on left: 0
start (33)
    on left: 1, on right: 0
File (34)
    on left: 2 3, on right: 1 3
TypeDeclaration (35)
    on left: 5 7 9, on right: 2 3
$@1 (36)
    on left: 4, on right: 5
$@2 (37)
    on left: 6, on right: 7
$@3 (38)
    on left: 8, on right: 9
TypeList (39)
    on left: 10 11, on right: 11 18
ExpressionList (40)
    on left: 12 13, on right: 13 15
MethodCallParameters (41)
    on left: 14 15, on right: 56 57
Type (42)
    on left: 16, on right: 10 11 36 37 40 41 56 57
ParamTypes (43)
    on left: 17 18, on right: 35 36 37
Class (44)
    on left: 19 20, on right: 5 20
ExternalClass (45)
    on left: 21 22, on right: 7 22
Interface (46)
    on left: 23 24, on right: 9 24
MethodName (47)
    on left: 25 26 27 28 29 30, on right: 34 36 37
MethodExpr (48)
    on left: 31 32, on right: 33 34
ClassMethod (49)
    on left: 33 34, on right: 19 20
ExternalMethod (50)
    on left: 35 36, on right: 21 22
InterfaceMethod (51)
    on left: 37, on right: 23 24
ParamSpec (52)
    on left: 38 39, on right: 33 34
ParamSpecList (53)
    on left: 40 41, on right: 38 41
EndOfLine (54)
    on left: 42 43, on right: 3 20 22 24 43 45 48
AllowEndOfLine (55)
    on left: 44 45, on right: 1 5 7 9 46
Scope (56)
    on left: 46, on right: 31 50
ScopeExpressions (57)
    on left: 47 48, on right: 46 48
Precision7 (58)
    on left: 49 50 51 52 53 54 55 56 57, on right: 58
Precision6 (59)
    on left: 58, on right: 59
Precision5 (60)
    on left: 59 60 61 62, on right: 60 61 62 63 64 65
Precision4 (61)
    on left: 63 64 65, on right: 64 65 66 67 68
Precision3 (62)
    on left: 66 67 68, on right: 67 68 69 70
Precision2 (63)
    on left: 69 70, on right: 71
Precision1 (64)
    on left: 71 72, on right: 73
Precision0 (65)
    on left: 73 74, on right: 49 75
Expression (66)
    on left: 75, on right: 12 13 32 47 48 72 74


state 0

    0 $accept: . start $end

    ';'  shift, and go to state 1

    $default  reduce using rule 44 (AllowEndOfLine)

    start           go to state 2
    EndOfLine       go to state 3
    AllowEndOfLine  go to state 4


state 1

   42 EndOfLine: ';' .

    $default  reduce using rule 42 (EndOfLine)


state 2

    0 $accept: start . $end

    $end  shift, and go to state 5


state 3

   43 EndOfLine: EndOfLine . ';'
   45 AllowEndOfLine: EndOfLine .

    ';'  shift, and go to state 6

    $default  reduce using rule 45 (AllowEndOfLine)


state 4

    1 start: AllowEndOfLine . File AllowEndOfLine

    TYPENAME  shift, and go to state 7
    EXTERNAL  shift, and go to state 8

    File             go to state 9
    TypeDeclaration  go to state 10


state 5

    0 $accept: start $end .

    $default  accept


state 6

   43 EndOfLine: EndOfLine ';' .

    $default  reduce using rule 43 (EndOfLine)


state 7

    5 TypeDeclaration: TYPENAME . '(' ')' '{' $@1 AllowEndOfLine Class AllowEndOfLine '}'
    9                | TYPENAME . '{' $@3 AllowEndOfLine Interface AllowEndOfLine '}'

    '('  shift, and go to state 11
    '{'  shift, and go to state 12


state 8

    7 TypeDeclaration: EXTERNAL . TYPENAME $@2 '{' AllowEndOfLine ExternalClass AllowEndOfLine '}'

    TYPENAME  shift, and go to state 13


state 9

    1 start: AllowEndOfLine File . AllowEndOfLine
    3 File: File . EndOfLine TypeDeclaration

    ';'  shift, and go to state 1

    $default  reduce using rule 44 (AllowEndOfLine)

    EndOfLine       go to state 14
    AllowEndOfLine  go to state 15


state 10

    2 File: TypeDeclaration .

    $default  reduce using rule 2 (File)


state 11

    5 TypeDeclaration: TYPENAME '(' . ')' '{' $@1 AllowEndOfLine Class AllowEndOfLine '}'

    ')'  shift, and go to state 16


state 12

    9 TypeDeclaration: TYPENAME '{' . $@3 AllowEndOfLine Interface AllowEndOfLine '}'

    $default  reduce using rule 8 ($@3)

    $@3  go to state 17


state 13

    7 TypeDeclaration: EXTERNAL TYPENAME . $@2 '{' AllowEndOfLine ExternalClass AllowEndOfLine '}'

    $default  reduce using rule 6 ($@2)

    $@2  go to state 18


state 14

    3 File: File EndOfLine . TypeDeclaration
   43 EndOfLine: EndOfLine . ';'
   45 AllowEndOfLine: EndOfLine .

    TYPENAME  shift, and go to state 7
    EXTERNAL  shift, and go to state 8
    ';'       shift, and go to state 6

    $default  reduce using rule 45 (AllowEndOfLine)

    TypeDeclaration  go to state 19


state 15

    1 start: AllowEndOfLine File AllowEndOfLine .

    $default  reduce using rule 1 (start)


state 16

    5 TypeDeclaration: TYPENAME '(' ')' . '{' $@1 AllowEndOfLine Class AllowEndOfLine '}'

    '{'  shift, and go to state 20


state 17

    9 TypeDeclaration: TYPENAME '{' $@3 . AllowEndOfLine Interface AllowEndOfLine '}'

    ';'  shift, and go to state 1

    $default  reduce using rule 44 (AllowEndOfLine)

    EndOfLine       go to state 3
    AllowEndOfLine  go to state 21


state 18

    7 TypeDeclaration: EXTERNAL TYPENAME $@2 . '{' AllowEndOfLine ExternalClass AllowEndOfLine '}'

    '{'  shift, and go to state 22


state 19

    3 File: File EndOfLine TypeDeclaration .

    $default  reduce using rule 3 (File)


state 20

    5 TypeDeclaration: TYPENAME '(' ')' '{' . $@1 AllowEndOfLine Class AllowEndOfLine '}'

    $default  reduce using rule 4 ($@1)

    $@1  go to state 23


state 21

    9 TypeDeclaration: TYPENAME '{' $@3 AllowEndOfLine . Interface AllowEndOfLine '}'

    TYPENAME  shift, and go to state 24

    Type             go to state 25
    Interface        go to state 26
    InterfaceMethod  go to state 27


state 22

    7 TypeDeclaration: EXTERNAL TYPENAME $@2 '{' . AllowEndOfLine ExternalClass AllowEndOfLine '}'

    ';'  shift, and go to state 1

    $default  reduce using rule 44 (AllowEndOfLine)

    EndOfLine       go to state 3
    AllowEndOfLine  go to state 28


state 23

    5 TypeDeclaration: TYPENAME '(' ')' '{' $@1 . AllowEndOfLine Class AllowEndOfLine '}'

    ';'  shift, and go to state 1

    $default  reduce using rule 44 (AllowEndOfLine)

    EndOfLine       go to state 3
    AllowEndOfLine  go to state 29


state 24

   16 Type: TYPENAME .

    $default  reduce using rule 16 (Type)


state 25

   37 InterfaceMethod: Type . MethodName '(' ParamTypes ')'

    VARNAME  shift, and go to state 30
    ISEQUAL  shift, and go to state 31
    '+'      shift, and go to state 32
    '-'      shift, and go to state 33
    '*'      shift, and go to state 34
    '/'      shift, and go to state 35

    MethodName  go to state 36


state 26

    9 TypeDeclaration: TYPENAME '{' $@3 AllowEndOfLine Interface . AllowEndOfLine '}'
   24 Interface: Interface . EndOfLine InterfaceMethod

    ';'  shift, and go to state 1

    $default  reduce using rule 44 (AllowEndOfLine)

    EndOfLine       go to state 37
    AllowEndOfLine  go to state 38


state 27

   23 Interface: InterfaceMethod .

    $default  reduce using rule 23 (Interface)


state 28

    7 TypeDeclaration: EXTERNAL TYPENAME $@2 '{' AllowEndOfLine . ExternalClass AllowEndOfLine '}'

    TYPENAME  shift, and go to state 39

    Type            go to state 40
    ExternalClass   go to state 41
    ExternalMethod  go to state 42


state 29

    5 TypeDeclaration: TYPENAME '(' ')' '{' $@1 AllowEndOfLine . Class AllowEndOfLine '}'

    TYPENAME  shift, and go to state 43
    VARNAME   shift, and go to state 30
    ISEQUAL   shift, and go to state 31
    '+'       shift, and go to state 32
    '-'       shift, and go to state 33
    '*'       shift, and go to state 34
    '/'       shift, and go to state 35

    Class        go to state 44
    MethodName   go to state 45
    ClassMethod  go to state 46


state 30

   25 MethodName: VARNAME .

    $default  reduce using rule 25 (MethodName)


state 31

   30 MethodName: ISEQUAL .

    $default  reduce using rule 30 (MethodName)


state 32

   26 MethodName: '+' .

    $default  reduce using rule 26 (MethodName)


state 33

   27 MethodName: '-' .

    $default  reduce using rule 27 (MethodName)


state 34

   28 MethodName: '*' .

    $default  reduce using rule 28 (MethodName)


state 35

   29 MethodName: '/' .

    $default  reduce using rule 29 (MethodName)


state 36

   37 InterfaceMethod: Type MethodName . '(' ParamTypes ')'

    '('  shift, and go to state 47


state 37

   24 Interface: Interface EndOfLine . InterfaceMethod
   43 EndOfLine: EndOfLine . ';'
   45 AllowEndOfLine: EndOfLine .

    TYPENAME  shift, and go to state 24
    ';'       shift, and go to state 6

    $default  reduce using rule 45 (AllowEndOfLine)

    Type             go to state 25
    InterfaceMethod  go to state 48


state 38

    9 TypeDeclaration: TYPENAME '{' $@3 AllowEndOfLine Interface AllowEndOfLine . '}'

    '}'  shift, and go to state 49


state 39

   16 Type: TYPENAME .
   35 ExternalMethod: TYPENAME . '(' ParamTypes ')'

    '('  shift, and go to state 50

    $default  reduce using rule 16 (Type)


state 40

   36 ExternalMethod: Type . MethodName '(' ParamTypes ')'

    VARNAME  shift, and go to state 30
    ISEQUAL  shift, and go to state 31
    '+'      shift, and go to state 32
    '-'      shift, and go to state 33
    '*'      shift, and go to state 34
    '/'      shift, and go to state 35

    MethodName  go to state 51


state 41

    7 TypeDeclaration: EXTERNAL TYPENAME $@2 '{' AllowEndOfLine ExternalClass . AllowEndOfLine '}'
   22 ExternalClass: ExternalClass . EndOfLine ExternalMethod

    ';'  shift, and go to state 1

    $default  reduce using rule 44 (AllowEndOfLine)

    EndOfLine       go to state 52
    AllowEndOfLine  go to state 53


state 42

   21 ExternalClass: ExternalMethod .

    $default  reduce using rule 21 (ExternalClass)


state 43

   33 ClassMethod: TYPENAME . '(' ParamSpec ')' MethodExpr

    '('  shift, and go to state 54


state 44

    5 TypeDeclaration: TYPENAME '(' ')' '{' $@1 AllowEndOfLine Class . AllowEndOfLine '}'
   20 Class: Class . EndOfLine ClassMethod

    ';'  shift, and go to state 1

    $default  reduce using rule 44 (AllowEndOfLine)

    EndOfLine       go to state 55
    AllowEndOfLine  go to state 56


state 45

   34 ClassMethod: MethodName . '(' ParamSpec ')' MethodExpr

    '('  shift, and go to state 57


state 46

   19 Class: ClassMethod .

    $default  reduce using rule 19 (Class)


state 47

   37 InterfaceMethod: Type MethodName '(' . ParamTypes ')'

    TYPENAME  shift, and go to state 24

    $default  reduce using rule 17 (ParamTypes)

    TypeList    go to state 58
    Type        go to state 59
    ParamTypes  go to state 60


state 48

   24 Interface: Interface EndOfLine InterfaceMethod .

    $default  reduce using rule 24 (Interface)


state 49

    9 TypeDeclaration: TYPENAME '{' $@3 AllowEndOfLine Interface AllowEndOfLine '}' .

    $default  reduce using rule 9 (TypeDeclaration)


state 50

   35 ExternalMethod: TYPENAME '(' . ParamTypes ')'

    TYPENAME  shift, and go to state 24

    $default  reduce using rule 17 (ParamTypes)

    TypeList    go to state 58
    Type        go to state 59
    ParamTypes  go to state 61


state 51

   36 ExternalMethod: Type MethodName . '(' ParamTypes ')'

    '('  shift, and go to state 62


state 52

   22 ExternalClass: ExternalClass EndOfLine . ExternalMethod
   43 EndOfLine: EndOfLine . ';'
   45 AllowEndOfLine: EndOfLine .

    TYPENAME  shift, and go to state 39
    ';'       shift, and go to state 6

    $default  reduce using rule 45 (AllowEndOfLine)

    Type            go to state 40
    ExternalMethod  go to state 63


state 53

    7 TypeDeclaration: EXTERNAL TYPENAME $@2 '{' AllowEndOfLine ExternalClass AllowEndOfLine . '}'

    '}'  shift, and go to state 64


state 54

   33 ClassMethod: TYPENAME '(' . ParamSpec ')' MethodExpr

    TYPENAME  shift, and go to state 24

    $default  reduce using rule 39 (ParamSpec)

    Type           go to state 65
    ParamSpec      go to state 66
    ParamSpecList  go to state 67


state 55

   20 Class: Class EndOfLine . ClassMethod
   43 EndOfLine: EndOfLine . ';'
   45 AllowEndOfLine: EndOfLine .

    TYPENAME  shift, and go to state 43
    VARNAME   shift, and go to state 30
    ISEQUAL   shift, and go to state 31
    '+'       shift, and go to state 32
    '-'       shift, and go to state 33
    '*'       shift, and go to state 34
    '/'       shift, and go to state 35
    ';'       shift, and go to state 6

    $default  reduce using rule 45 (AllowEndOfLine)

    MethodName   go to state 45
    ClassMethod  go to state 68


state 56

    5 TypeDeclaration: TYPENAME '(' ')' '{' $@1 AllowEndOfLine Class AllowEndOfLine . '}'

    '}'  shift, and go to state 69


state 57

   34 ClassMethod: MethodName '(' . ParamSpec ')' MethodExpr

    TYPENAME  shift, and go to state 24

    $default  reduce using rule 39 (ParamSpec)

    Type           go to state 65
    ParamSpec      go to state 70
    ParamSpecList  go to state 67


state 58

   11 TypeList: TypeList . ',' Type
   18 ParamTypes: TypeList .

    ','  shift, and go to state 71

    $default  reduce using rule 18 (ParamTypes)


state 59

   10 TypeList: Type .

    $default  reduce using rule 10 (TypeList)


state 60

   37 InterfaceMethod: Type MethodName '(' ParamTypes . ')'

    ')'  shift, and go to state 72


state 61

   35 ExternalMethod: TYPENAME '(' ParamTypes . ')'

    ')'  shift, and go to state 73


state 62

   36 ExternalMethod: Type MethodName '(' . ParamTypes ')'

    TYPENAME  shift, and go to state 24

    $default  reduce using rule 17 (ParamTypes)

    TypeList    go to state 58
    Type        go to state 59
    ParamTypes  go to state 74


state 63

   22 ExternalClass: ExternalClass EndOfLine ExternalMethod .

    $default  reduce using rule 22 (ExternalClass)


state 64

    7 TypeDeclaration: EXTERNAL TYPENAME $@2 '{' AllowEndOfLine ExternalClass AllowEndOfLine '}' .

    $default  reduce using rule 7 (TypeDeclaration)


state 65

   40 ParamSpecList: Type . VARNAME

    VARNAME  shift, and go to state 75


state 66

   33 ClassMethod: TYPENAME '(' ParamSpec . ')' MethodExpr

    ')'  shift, and go to state 76


state 67

   38 ParamSpec: ParamSpecList .
   41 ParamSpecList: ParamSpecList . ',' Type VARNAME

    ','  shift, and go to state 77

    $default  reduce using rule 38 (ParamSpec)


state 68

   20 Class: Class EndOfLine ClassMethod .

    $default  reduce using rule 20 (Class)


state 69

    5 TypeDeclaration: TYPENAME '(' ')' '{' $@1 AllowEndOfLine Class AllowEndOfLine '}' .

    $default  reduce using rule 5 (TypeDeclaration)


state 70

   34 ClassMethod: MethodName '(' ParamSpec . ')' MethodExpr

    ')'  shift, and go to state 78


state 71

   11 TypeList: TypeList ',' . Type

    TYPENAME  shift, and go to state 24

    Type  go to state 79


state 72

   37 InterfaceMethod: Type MethodName '(' ParamTypes ')' .

    $default  reduce using rule 37 (InterfaceMethod)


state 73

   35 ExternalMethod: TYPENAME '(' ParamTypes ')' .

    $default  reduce using rule 35 (ExternalMethod)


state 74

   36 ExternalMethod: Type MethodName '(' ParamTypes . ')'

    ')'  shift, and go to state 80


state 75

   40 ParamSpecList: Type VARNAME .

    $default  reduce using rule 40 (ParamSpecList)


state 76

   33 ClassMethod: TYPENAME '(' ParamSpec ')' . MethodExpr

    '{'  shift, and go to state 81
    '='  shift, and go to state 82

    MethodExpr  go to state 83
    Scope       go to state 84


state 77

   41 ParamSpecList: ParamSpecList ',' . Type VARNAME

    TYPENAME  shift, and go to state 24

    Type  go to state 85


state 78

   34 ClassMethod: MethodName '(' ParamSpec ')' . MethodExpr

    '{'  shift, and go to state 81
    '='  shift, and go to state 82

    MethodExpr  go to state 86
    Scope       go to state 84


state 79

   11 TypeList: TypeList ',' Type .

    $default  reduce using rule 11 (TypeList)


state 80

   36 ExternalMethod: Type MethodName '(' ParamTypes ')' .

    $default  reduce using rule 36 (ExternalMethod)


state 81

   46 Scope: '{' . AllowEndOfLine ScopeExpressions AllowEndOfLine '}'

    ';'  shift, and go to state 1

    $default  reduce using rule 44 (AllowEndOfLine)

    EndOfLine       go to state 3
    AllowEndOfLine  go to state 87


state 82

   32 MethodExpr: '=' . Expression

    FLOAT     shift, and go to state 88
    INT       shift, and go to state 89
    BOOL      shift, and go to state 90
    STRING    shift, and go to state 91
    TYPENAME  shift, and go to state 24
    VARNAME   shift, and go to state 92
    IF        shift, and go to state 93
    '('       shift, and go to state 94
    '{'       shift, and go to state 81
    '+'       shift, and go to state 95
    '-'       shift, and go to state 96
    '!'       shift, and go to state 97

    Type        go to state 98
    Scope       go to state 99
    Precision7  go to state 100
    Precision6  go to state 101
    Precision5  go to state 102
    Precision4  go to state 103
    Precision3  go to state 104
    Precision2  go to state 105
    Precision1  go to state 106
    Precision0  go to state 107
    Expression  go to state 108


state 83

   33 ClassMethod: TYPENAME '(' ParamSpec ')' MethodExpr .

    $default  reduce using rule 33 (ClassMethod)


state 84

   31 MethodExpr: Scope .

    $default  reduce using rule 31 (MethodExpr)


state 85

   41 ParamSpecList: ParamSpecList ',' Type . VARNAME

    VARNAME  shift, and go to state 109


state 86

   34 ClassMethod: MethodName '(' ParamSpec ')' MethodExpr .

    $default  reduce using rule 34 (ClassMethod)


state 87

   46 Scope: '{' AllowEndOfLine . ScopeExpressions AllowEndOfLine '}'

    FLOAT     shift, and go to state 88
    INT       shift, and go to state 89
    BOOL      shift, and go to state 90
    STRING    shift, and go to state 91
    TYPENAME  shift, and go to state 24
    VARNAME   shift, and go to state 92
    IF        shift, and go to state 93
    '('       shift, and go to state 94
    '{'       shift, and go to state 81
    '+'       shift, and go to state 95
    '-'       shift, and go to state 96
    '!'       shift, and go to state 97

    Type              go to state 98
    Scope             go to state 99
    ScopeExpressions  go to state 110
    Precision7        go to state 100
    Precision6        go to state 101
    Precision5        go to state 102
    Precision4        go to state 103
    Precision3        go to state 104
    Precision2        go to state 105
    Precision1        go to state 106
    Precision0        go to state 107
    Expression        go to state 111


state 88

   54 Precision7: FLOAT .

    $default  reduce using rule 54 (Precision7)


state 89

   52 Precision7: INT .

    $default  reduce using rule 52 (Precision7)


state 90

   53 Precision7: BOOL .

    $default  reduce using rule 53 (Precision7)


state 91

   55 Precision7: STRING .

    $default  reduce using rule 55 (Precision7)


state 92

   51 Precision7: VARNAME .
   74 Precision0: VARNAME . '=' Expression

    '='  shift, and go to state 112

    $default  reduce using rule 51 (Precision7)


state 93

   72 Precision1: IF . '(' Expression ')' Expression ELSE Expression

    '('  shift, and go to state 113


state 94

   49 Precision7: '(' . Precision0 ')'

    FLOAT     shift, and go to state 88
    INT       shift, and go to state 89
    BOOL      shift, and go to state 90
    STRING    shift, and go to state 91
    TYPENAME  shift, and go to state 24
    VARNAME   shift, and go to state 92
    IF        shift, and go to state 93
    '('       shift, and go to state 94
    '{'       shift, and go to state 81
    '+'       shift, and go to state 95
    '-'       shift, and go to state 96
    '!'       shift, and go to state 97

    Type        go to state 98
    Scope       go to state 99
    Precision7  go to state 100
    Precision6  go to state 101
    Precision5  go to state 102
    Precision4  go to state 103
    Precision3  go to state 104
    Precision2  go to state 105
    Precision1  go to state 106
    Precision0  go to state 114


state 95

   60 Precision5: '+' . Precision5

    FLOAT     shift, and go to state 88
    INT       shift, and go to state 89
    BOOL      shift, and go to state 90
    STRING    shift, and go to state 91
    TYPENAME  shift, and go to state 24
    VARNAME   shift, and go to state 115
    '('       shift, and go to state 94
    '{'       shift, and go to state 81
    '+'       shift, and go to state 95
    '-'       shift, and go to state 96
    '!'       shift, and go to state 97

    Type        go to state 98
    Scope       go to state 99
    Precision7  go to state 100
    Precision6  go to state 101
    Precision5  go to state 116


state 96

   61 Precision5: '-' . Precision5

    FLOAT     shift, and go to state 88
    INT       shift, and go to state 89
    BOOL      shift, and go to state 90
    STRING    shift, and go to state 91
    TYPENAME  shift, and go to state 24
    VARNAME   shift, and go to state 115
    '('       shift, and go to state 94
    '{'       shift, and go to state 81
    '+'       shift, and go to state 95
    '-'       shift, and go to state 96
    '!'       shift, and go to state 97

    Type        go to state 98
    Scope       go to state 99
    Precision7  go to state 100
    Precision6  go to state 101
    Precision5  go to state 117


state 97

   62 Precision5: '!' . Precision5

    FLOAT     shift, and go to state 88
    INT       shift, and go to state 89
    BOOL      shift, and go to state 90
    STRING    shift, and go to state 91
    TYPENAME  shift, and go to state 24
    VARNAME   shift, and go to state 115
    '('       shift, and go to state 94
    '{'       shift, and go to state 81
    '+'       shift, and go to state 95
    '-'       shift, and go to state 96
    '!'       shift, and go to state 97

    Type        go to state 98
    Scope       go to state 99
    Precision7  go to state 100
    Precision6  go to state 101
    Precision5  go to state 118


state 98

   56 Precision7: Type . ':' TYPENAME '(' MethodCallParameters ')'
   57           | Type . '(' MethodCallParameters ')'

    '('  shift, and go to state 119
    ':'  shift, and go to state 120


state 99

   50 Precision7: Scope .

    $default  reduce using rule 50 (Precision7)


state 100

   58 Precision6: Precision7 .

    $default  reduce using rule 58 (Precision6)


state 101

   59 Precision5: Precision6 .

    $default  reduce using rule 59 (Precision5)


state 102

   63 Precision4: Precision5 .

    $default  reduce using rule 63 (Precision4)


state 103

   64 Precision4: Precision4 . '*' Precision5
   65           | Precision4 . '/' Precision5
   66 Precision3: Precision4 .

    '*'  shift, and go to state 121
    '/'  shift, and go to state 122

    $default  reduce using rule 66 (Precision3)


state 104

   67 Precision3: Precision3 . '+' Precision4
   68           | Precision3 . '-' Precision4
   69 Precision2: Precision3 .
   70           | Precision3 . ISEQUAL Precision3

    ISEQUAL  shift, and go to state 123
    '+'      shift, and go to state 124
    '-'      shift, and go to state 125

    $default  reduce using rule 69 (Precision2)


state 105

   71 Precision1: Precision2 .

    $default  reduce using rule 71 (Precision1)


state 106

   73 Precision0: Precision1 .

    $default  reduce using rule 73 (Precision0)


state 107

   75 Expression: Precision0 .

    $default  reduce using rule 75 (Expression)


state 108

   32 MethodExpr: '=' Expression .

    $default  reduce using rule 32 (MethodExpr)


state 109

   41 ParamSpecList: ParamSpecList ',' Type VARNAME .

    $default  reduce using rule 41 (ParamSpecList)


state 110

   46 Scope: '{' AllowEndOfLine ScopeExpressions . AllowEndOfLine '}'
   48 ScopeExpressions: ScopeExpressions . EndOfLine Expression

    ';'  shift, and go to state 1

    $default  reduce using rule 44 (AllowEndOfLine)

    EndOfLine       go to state 126
    AllowEndOfLine  go to state 127


state 111

   47 ScopeExpressions: Expression .

    $default  reduce using rule 47 (ScopeExpressions)


state 112

   74 Precision0: VARNAME '=' . Expression

    FLOAT     shift, and go to state 88
    INT       shift, and go to state 89
    BOOL      shift, and go to state 90
    STRING    shift, and go to state 91
    TYPENAME  shift, and go to state 24
    VARNAME   shift, and go to state 92
    IF        shift, and go to state 93
    '('       shift, and go to state 94
    '{'       shift, and go to state 81
    '+'       shift, and go to state 95
    '-'       shift, and go to state 96
    '!'       shift, and go to state 97

    Type        go to state 98
    Scope       go to state 99
    Precision7  go to state 100
    Precision6  go to state 101
    Precision5  go to state 102
    Precision4  go to state 103
    Precision3  go to state 104
    Precision2  go to state 105
    Precision1  go to state 106
    Precision0  go to state 107
    Expression  go to state 128


state 113

   72 Precision1: IF '(' . Expression ')' Expression ELSE Expression

    FLOAT     shift, and go to state 88
    INT       shift, and go to state 89
    BOOL      shift, and go to state 90
    STRING    shift, and go to state 91
    TYPENAME  shift, and go to state 24
    VARNAME   shift, and go to state 92
    IF        shift, and go to state 93
    '('       shift, and go to state 94
    '{'       shift, and go to state 81
    '+'       shift, and go to state 95
    '-'       shift, and go to state 96
    '!'       shift, and go to state 97

    Type        go to state 98
    Scope       go to state 99
    Precision7  go to state 100
    Precision6  go to state 101
    Precision5  go to state 102
    Precision4  go to state 103
    Precision3  go to state 104
    Precision2  go to state 105
    Precision1  go to state 106
    Precision0  go to state 107
    Expression  go to state 129


state 114

   49 Precision7: '(' Precision0 . ')'

    ')'  shift, and go to state 130


state 115

   51 Precision7: VARNAME .

    $default  reduce using rule 51 (Precision7)


state 116

   60 Precision5: '+' Precision5 .

    $default  reduce using rule 60 (Precision5)


state 117

   61 Precision5: '-' Precision5 .

    $default  reduce using rule 61 (Precision5)


state 118

   62 Precision5: '!' Precision5 .

    $default  reduce using rule 62 (Precision5)


state 119

   57 Precision7: Type '(' . MethodCallParameters ')'

    FLOAT     shift, and go to state 88
    INT       shift, and go to state 89
    BOOL      shift, and go to state 90
    STRING    shift, and go to state 91
    TYPENAME  shift, and go to state 24
    VARNAME   shift, and go to state 92
    IF        shift, and go to state 93
    '('       shift, and go to state 94
    '{'       shift, and go to state 81
    '+'       shift, and go to state 95
    '-'       shift, and go to state 96
    '!'       shift, and go to state 97

    $default  reduce using rule 14 (MethodCallParameters)

    ExpressionList        go to state 131
    MethodCallParameters  go to state 132
    Type                  go to state 98
    Scope                 go to state 99
    Precision7            go to state 100
    Precision6            go to state 101
    Precision5            go to state 102
    Precision4            go to state 103
    Precision3            go to state 104
    Precision2            go to state 105
    Precision1            go to state 106
    Precision0            go to state 107
    Expression            go to state 133


state 120

   56 Precision7: Type ':' . TYPENAME '(' MethodCallParameters ')'

    TYPENAME  shift, and go to state 134


state 121

   64 Precision4: Precision4 '*' . Precision5

    FLOAT     shift, and go to state 88
    INT       shift, and go to state 89
    BOOL      shift, and go to state 90
    STRING    shift, and go to state 91
    TYPENAME  shift, and go to state 24
    VARNAME   shift, and go to state 115
    '('       shift, and go to state 94
    '{'       shift, and go to state 81
    '+'       shift, and go to state 95
    '-'       shift, and go to state 96
    '!'       shift, and go to state 97

    Type        go to state 98
    Scope       go to state 99
    Precision7  go to state 100
    Precision6  go to state 101
    Precision5  go to state 135


state 122

   65 Precision4: Precision4 '/' . Precision5

    FLOAT     shift, and go to state 88
    INT       shift, and go to state 89
    BOOL      shift, and go to state 90
    STRING    shift, and go to state 91
    TYPENAME  shift, and go to state 24
    VARNAME   shift, and go to state 115
    '('       shift, and go to state 94
    '{'       shift, and go to state 81
    '+'       shift, and go to state 95
    '-'       shift, and go to state 96
    '!'       shift, and go to state 97

    Type        go to state 98
    Scope       go to state 99
    Precision7  go to state 100
    Precision6  go to state 101
    Precision5  go to state 136


state 123

   70 Precision2: Precision3 ISEQUAL . Precision3

    FLOAT     shift, and go to state 88
    INT       shift, and go to state 89
    BOOL      shift, and go to state 90
    STRING    shift, and go to state 91
    TYPENAME  shift, and go to state 24
    VARNAME   shift, and go to state 115
    '('       shift, and go to state 94
    '{'       shift, and go to state 81
    '+'       shift, and go to state 95
    '-'       shift, and go to state 96
    '!'       shift, and go to state 97

    Type        go to state 98
    Scope       go to state 99
    Precision7  go to state 100
    Precision6  go to state 101
    Precision5  go to state 102
    Precision4  go to state 103
    Precision3  go to state 137


state 124

   67 Precision3: Precision3 '+' . Precision4

    FLOAT     shift, and go to state 88
    INT       shift, and go to state 89
    BOOL      shift, and go to state 90
    STRING    shift, and go to state 91
    TYPENAME  shift, and go to state 24
    VARNAME   shift, and go to state 115
    '('       shift, and go to state 94
    '{'       shift, and go to state 81
    '+'       shift, and go to state 95
    '-'       shift, and go to state 96
    '!'       shift, and go to state 97

    Type        go to state 98
    Scope       go to state 99
    Precision7  go to state 100
    Precision6  go to state 101
    Precision5  go to state 102
    Precision4  go to state 138


state 125

   68 Precision3: Precision3 '-' . Precision4

    FLOAT     shift, and go to state 88
    INT       shift, and go to state 89
    BOOL      shift, and go to state 90
    STRING    shift, and go to state 91
    TYPENAME  shift, and go to state 24
    VARNAME   shift, and go to state 115
    '('       shift, and go to state 94
    '{'       shift, and go to state 81
    '+'       shift, and go to state 95
    '-'       shift, and go to state 96
    '!'       shift, and go to state 97

    Type        go to state 98
    Scope       go to state 99
    Precision7  go to state 100
    Precision6  go to state 101
    Precision5  go to state 102
    Precision4  go to state 139


state 126

   43 EndOfLine: EndOfLine . ';'
   45 AllowEndOfLine: EndOfLine .
   48 ScopeExpressions: ScopeExpressions EndOfLine . Expression

    FLOAT     shift, and go to state 88
    INT       shift, and go to state 89
    BOOL      shift, and go to state 90
    STRING    shift, and go to state 91
    TYPENAME  shift, and go to state 24
    VARNAME   shift, and go to state 92
    IF        shift, and go to state 93
    '('       shift, and go to state 94
    '{'       shift, and go to state 81
    '+'       shift, and go to state 95
    '-'       shift, and go to state 96
    ';'       shift, and go to state 6
    '!'       shift, and go to state 97

    $default  reduce using rule 45 (AllowEndOfLine)

    Type        go to state 98
    Scope       go to state 99
    Precision7  go to state 100
    Precision6  go to state 101
    Precision5  go to state 102
    Precision4  go to state 103
    Precision3  go to state 104
    Precision2  go to state 105
    Precision1  go to state 106
    Precision0  go to state 107
    Expression  go to state 140


state 127

   46 Scope: '{' AllowEndOfLine ScopeExpressions AllowEndOfLine . '}'

    '}'  shift, and go to state 141


state 128

   74 Precision0: VARNAME '=' Expression .

    $default  reduce using rule 74 (Precision0)


state 129

   72 Precision1: IF '(' Expression . ')' Expression ELSE Expression

    ')'  shift, and go to state 142


state 130

   49 Precision7: '(' Precision0 ')' .

    $default  reduce using rule 49 (Precision7)


state 131

   13 ExpressionList: ExpressionList . ',' Expression
   15 MethodCallParameters: ExpressionList .

    ','  shift, and go to state 143

    $default  reduce using rule 15 (MethodCallParameters)


state 132

   57 Precision7: Type '(' MethodCallParameters . ')'

    ')'  shift, and go to state 144


state 133

   12 ExpressionList: Expression .

    $default  reduce using rule 12 (ExpressionList)


state 134

   56 Precision7: Type ':' TYPENAME . '(' MethodCallParameters ')'

    '('  shift, and go to state 145


state 135

   64 Precision4: Precision4 '*' Precision5 .

    $default  reduce using rule 64 (Precision4)


state 136

   65 Precision4: Precision4 '/' Precision5 .

    $default  reduce using rule 65 (Precision4)


state 137

   67 Precision3: Precision3 . '+' Precision4
   68           | Precision3 . '-' Precision4
   70 Precision2: Precision3 ISEQUAL Precision3 .

    '+'  shift, and go to state 124
    '-'  shift, and go to state 125

    $default  reduce using rule 70 (Precision2)


state 138

   64 Precision4: Precision4 . '*' Precision5
   65           | Precision4 . '/' Precision5
   67 Precision3: Precision3 '+' Precision4 .

    '*'  shift, and go to state 121
    '/'  shift, and go to state 122

    $default  reduce using rule 67 (Precision3)


state 139

   64 Precision4: Precision4 . '*' Precision5
   65           | Precision4 . '/' Precision5
   68 Precision3: Precision3 '-' Precision4 .

    '*'  shift, and go to state 121
    '/'  shift, and go to state 122

    $default  reduce using rule 68 (Precision3)


state 140

   48 ScopeExpressions: ScopeExpressions EndOfLine Expression .

    $default  reduce using rule 48 (ScopeExpressions)


state 141

   46 Scope: '{' AllowEndOfLine ScopeExpressions AllowEndOfLine '}' .

    $default  reduce using rule 46 (Scope)


state 142

   72 Precision1: IF '(' Expression ')' . Expression ELSE Expression

    FLOAT     shift, and go to state 88
    INT       shift, and go to state 89
    BOOL      shift, and go to state 90
    STRING    shift, and go to state 91
    TYPENAME  shift, and go to state 24
    VARNAME   shift, and go to state 92
    IF        shift, and go to state 93
    '('       shift, and go to state 94
    '{'       shift, and go to state 81
    '+'       shift, and go to state 95
    '-'       shift, and go to state 96
    '!'       shift, and go to state 97

    Type        go to state 98
    Scope       go to state 99
    Precision7  go to state 100
    Precision6  go to state 101
    Precision5  go to state 102
    Precision4  go to state 103
    Precision3  go to state 104
    Precision2  go to state 105
    Precision1  go to state 106
    Precision0  go to state 107
    Expression  go to state 146


state 143

   13 ExpressionList: ExpressionList ',' . Expression

    FLOAT     shift, and go to state 88
    INT       shift, and go to state 89
    BOOL      shift, and go to state 90
    STRING    shift, and go to state 91
    TYPENAME  shift, and go to state 24
    VARNAME   shift, and go to state 92
    IF        shift, and go to state 93
    '('       shift, and go to state 94
    '{'       shift, and go to state 81
    '+'       shift, and go to state 95
    '-'       shift, and go to state 96
    '!'       shift, and go to state 97

    Type        go to state 98
    Scope       go to state 99
    Precision7  go to state 100
    Precision6  go to state 101
    Precision5  go to state 102
    Precision4  go to state 103
    Precision3  go to state 104
    Precision2  go to state 105
    Precision1  go to state 106
    Precision0  go to state 107
    Expression  go to state 147


state 144

   57 Precision7: Type '(' MethodCallParameters ')' .

    $default  reduce using rule 57 (Precision7)


state 145

   56 Precision7: Type ':' TYPENAME '(' . MethodCallParameters ')'

    FLOAT     shift, and go to state 88
    INT       shift, and go to state 89
    BOOL      shift, and go to state 90
    STRING    shift, and go to state 91
    TYPENAME  shift, and go to state 24
    VARNAME   shift, and go to state 92
    IF        shift, and go to state 93
    '('       shift, and go to state 94
    '{'       shift, and go to state 81
    '+'       shift, and go to state 95
    '-'       shift, and go to state 96
    '!'       shift, and go to state 97

    $default  reduce using rule 14 (MethodCallParameters)

    ExpressionList        go to state 131
    MethodCallParameters  go to state 148
    Type                  go to state 98
    Scope                 go to state 99
    Precision7            go to state 100
    Precision6            go to state 101
    Precision5            go to state 102
    Precision4            go to state 103
    Precision3            go to state 104
    Precision2            go to state 105
    Precision1            go to state 106
    Precision0            go to state 107
    Expression            go to state 133


state 146

   72 Precision1: IF '(' Expression ')' Expression . ELSE Expression

    ELSE  shift, and go to state 149


state 147

   13 ExpressionList: ExpressionList ',' Expression .

    $default  reduce using rule 13 (ExpressionList)


state 148

   56 Precision7: Type ':' TYPENAME '(' MethodCallParameters . ')'

    ')'  shift, and go to state 150


state 149

   72 Precision1: IF '(' Expression ')' Expression ELSE . Expression

    FLOAT     shift, and go to state 88
    INT       shift, and go to state 89
    BOOL      shift, and go to state 90
    STRING    shift, and go to state 91
    TYPENAME  shift, and go to state 24
    VARNAME   shift, and go to state 92
    IF        shift, and go to state 93
    '('       shift, and go to state 94
    '{'       shift, and go to state 81
    '+'       shift, and go to state 95
    '-'       shift, and go to state 96
    '!'       shift, and go to state 97

    Type        go to state 98
    Scope       go to state 99
    Precision7  go to state 100
    Precision6  go to state 101
    Precision5  go to state 102
    Precision4  go to state 103
    Precision3  go to state 104
    Precision2  go to state 105
    Precision1  go to state 106
    Precision0  go to state 107
    Expression  go to state 151


state 150

   56 Precision7: Type ':' TYPENAME '(' MethodCallParameters ')' .

    $default  reduce using rule 56 (Precision7)


state 151

   72 Precision1: IF '(' Expression ')' Expression ELSE Expression .

    $default  reduce using rule 72 (Precision1)
