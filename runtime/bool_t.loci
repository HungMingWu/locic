template <typename T>
interface __implicit_cast_from_bool_t {
	static T implicit_cast_bool_t(bool value) noexcept;
}

template <typename T>
interface __cast_from_bool_t {
	static T cast_bool_t(bool value) noexcept;
}

__primitive bool {
	bool implicitCopy() const noexcept;
	
	template <typename T: __implicit_cast_from_bool_t<T>>
	T implicitCast() const noexcept;
	
	template <typename T: __cast_from_bool_t<T>>
	T cast() const noexcept;
	
	bool equal(const bool& v) const noexcept;
	bool not_equal(const bool& v) const noexcept;
	
	compare_result_t compare(const bool& v) const noexcept;
	
	bool not() const noexcept;
}
